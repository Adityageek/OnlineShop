@model OnlineShop.ViewModels.RegisterViewModel


@{
    ViewBag.Title = "Register";
}


<script src="~/Scripts/jquery-3.4.1.js"></script>
@*<script src="~/Scripts/jquery-3.4.1.min.js"></script>
    <script src="~/Scripts/bootstrap.min.js"></script>*@
<script src="~/Scripts/bootstrap.js"></script>
<script src="~/Scripts/knockout-3.5.0.js"></script>
<script src="~/Scripts/knockout.mapping-latest.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/Views/Account/Register.js"></script>
<h2>Register</h2>
@using (Html.BeginForm())
{

    <div class="form-group">
        <label class="control-label col-2" for="UserName">User Name</label>
        <div class="col-md-10">
            @Html.EditorFor(m => m.UserName, new { @class = "form-control text-box single-line", data_bind = "value: UserName" })
            @Html.ValidationMessageFor(m => m.UserName)
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-2" for="Email">Email</label>
        <div class="col-md-10">
            @*<input class="form-control text-box single-line" id="Email" name="Email" type="email" value="" data-bind="value: Email" />*@
            @Html.EditorFor(m => m.Email, new { @class = "form-control text-box single-line", data_bind = "Email" })
            @Html.ValidationMessageFor(m => m.Email)
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-2" for="Password">Password</label>
        <div class="col-md-10">
           @Html.PasswordFor(m => m.Password, new { data_bind = "Password" })
           @Html.ValidationMessageFor(m => m.Password)
        </div>
    </div>


    <div class="form-group">
        <label class="control-label col-2" for="DateOfBirth">Date Of Birth</label>
        <div class="col-md-10">
           @Html.EditorFor(m => m.DateOfBirth, new { @class = "form-control text-box single-line", data_bind = "DataOfBirth" })
           @Html.ValidationMessageFor(m=> m.DateOfBirth)
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-2" for="Gender">Gender</label>
      
        <div class="col-md-10">
           @Html.RadioButtonFor(m => m.Gender, "M", new {  data_bind = "Gender" })
           @Html.Label("Male")
           @Html.RadioButtonFor(m => m.Gender, "F", new {  data_bind = "Gender" })
           @Html.Label("Female")
           @Html.ValidationMessageFor(m=> m.Gender)

        </div>
    </div>


    <div class="form-group">
        <label class="control-label col-2" for="Contact">Contact</label>
        <div class="col-md-10">
            @Html.EditorFor(m=>m.Contact, new { @class = "form-control text-box single-line", data_bind = "Contact" })
            @Html.ValidationMessageFor(m=> m.Contact)
        </div>
    </div>


    <div class="form-group">
        <label class="control-label col-2" for="Address">Address</label>
        <div class="col-md-10">
           @Html.EditorFor(m=> m.Address, new {@class = "form-control text-box single-line", data_bind = "Address" })
           @Html.ValidationMessageFor(m => m.Address)
        </div>
    </div>

    <div class="form-group">
        <p>
            <b>Select State :</b>
            @Html.DropDownListFor(m => m.StateId, new SelectList(Model.States, "StateId", "State1", Model.StateId), "Please Select", new { @data_bind = "value: StateId, event:{ change: getCity()}" })
            @Html.ValidationMessageFor(m=> m.StateId)
        </p>

    </div>


    <div class="form-group">
        <p>
            <b>Select City :</b> <select name="CityId" data-bind="options: City,

                             optionsText: 'Text',
                             optionsValue: 'Value',
                             optionsCaption: 'Choose...'"></select>
        </p>
        @Html.ValidationMessageFor(m=> m.CityId)
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Register" class="btn btn-default">
        </div>
    </div>
}
<script type='text/javascript'>
    //var states = @Html.Raw(Html.Encode(ViewBag.State));
    var getCitiesUrl = '@Url.Action("getCity")';
    @*var states = @Html.Raw(Html.Encode(ViewBag.State));
    function AppViewModel() {
        var self = this;
        self.FullName = ko.observable();

    }
    //var appViewModel = new AppViewModel();
    //var viewModel = new AppViewModel(ko.mapping.fromJS(Html.Raw(Json.Encode(Model))));

    function NewViewModel(viewModel) {
        viewModel.City = ko.observable();
        viewModel.FullName1 = ko.observable();
        //viewModel.Cities = ko.observableArray([]);
        viewModel.StateId = ko.observable();
        viewModel.Email.extend({ email: true });

        viewModel.getCity = function () {
            debugger;
            if (viewModel.StateId()) {
                console.log('hello' + viewModel.StateId);
                //Call controller to get the list of cities using ajax
                $.ajax({
                    type: 'Get',
                    url: '@Url.Action("getCity")',
                    dataType: 'json',
                    data: { id: viewModel.StateId() },
                    success: function (data) {
                        debugger;
                        console.log(data.city);
                        viewModel.City(data.city);
                        //$.each(data.city, function (i, city) {

                        //    $("#CityId").append('<option value="'
                        //                               + city.Value + '">'
                        //                         + city.Text + '</option>');
                        //});
                    },
                    error: function (ex) {
                        alert('Failed.' + ex);
                    }
                });

            }
        };
    }
        *@
    var viewModel = ko.mapping.fromJS(@Html.Raw(Json.Encode(Model)));
    NewViewModel(viewModel);

    ko.applyBindings(viewModel);

</script>
        
